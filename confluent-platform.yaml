apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraft
  namespace: confluent
spec:
  configOverrides:
    server:
      - confluent.balancer.enable=true
      - confluent.balancer.heal.uneven.load.trigger=ANY_UNEVEN_LOAD
      - confluent.balancer.heal.broker.failure.threshold.ms=600000
      - confluent.balancer.throttle.bytes.per.second=104857600
      - inter.broker.listener.name=REPLICATION
      - listener.name.replication.ssl.client.auth=required
      - listener.name.replication.ssl.key.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - listener.name.replication.ssl.keystore.location=/mnt/sslcerts/keystore.p12
      - listener.name.replication.ssl.keystore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - listener.name.replication.ssl.principal.mapping.rules=RULE:.*CN[\s]?=[\s]?([a-zA-Z0-9.]*)?.*/$1/
      - listener.name.replication.ssl.truststore.location=/mnt/sslcerts/truststore.p12
      - listener.name.replication.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - listener.security.protocol.map=CONTROLLER:SSL,REPLICATION:SSL
  replicas: 3
  dataVolumeCapacity: 10G
  image:
    application: docker.io/confluentinc/cp-server:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  listeners:
    controller:
      tls:
        enabled: true
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:.*CN[\s]?=[\s]?([a-zA-Z0-9.]*)?.*/$1/
  tls:
    secretRef: tls-kraft
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
  annotations: 
    platform.confluent.io/enable-shrink: "true"
spec:
  configOverrides:
    server:
      - confluent.balancer.enable=true
      - confluent.balancer.heal.uneven.load.trigger=ANY_UNEVEN_LOAD
      - confluent.balancer.heal.broker.failure.threshold.ms=600000
      - kafka.rest.client.security.protocol=SASL_SSL
      - kafka.rest.enable=true
      - kafka.rest.client.ssl.truststore.location=/mnt/sslcerts/truststore.p12
      - kafka.rest.client.ssl.truststore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - kafka.rest.client.ssl.keystore.location=/mnt/sslcerts/keystore.p12
      - kafka.rest.client.ssl.keystore.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - kafka.rest.client.ssl.key.password=${file:/mnt/sslcerts/jksPassword.txt:jksPassword}
      - kafka.rest.client.principal.mapping.rules=RULE:.*CN[\s]?=[\s]?([a-zA-Z0-9.]*)?.*/$1/
  replicas: 3
  image:
    application: confluentinc/cp-server:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  tls:
    secretRef: tls-kafka
  metricReporter:
    enabled: true
    bootstrapEndpoint: kafka:9071
    authentication:
      type: mtls
    tls:
      enabled: true
  listeners:
    internal:
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:^CN=([a-zA-Z0-9]*).*$/$1/
      tls:
        enabled: true
    external:
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:^CN=([a-zA-Z0-9]*).*$/$1/
      tls:
        enabled: true
      externalAccess:
        type: loadBalancer
        loadBalancer:
          domain: mydomain.example
          brokerPrefix: b
          bootstrapPrefix: kafka
  dependencies:
    kRaftController:
      clusterRef:
        name: kraft
      controllerListener:
        authentication:
          type: mtls
        tls:
          enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server-connect:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  tls:
    secretRef: tls-connect
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: mydomain.example
      prefix: connect
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-schema-registry:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  tls:
    secretRef: tls-schemaregistry
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: mydomain.example
      prefix: sr
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-kafka-rest:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  tls:
    secretRef: tls-kafkarestproxy
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: mydomain.example
      prefix: krp
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-ksqldb-server:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: mydomain.example
      prefix: ksql
  tls:
    secretRef: tls-ksqldb
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: confluent
spec:
  replicas: 1
  podTemplate:
    probe:
      liveness:
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500
  image:
    application: confluentinc/cp-enterprise-control-center:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: mydomain.example
      prefix: controlcenter
  tls:
    secretRef: tls-controlcenter
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
    connect:
      - name: connect
        url:  https://connect.confluent.svc.cluster.local:8083
        tls:
          enabled: true
    ksqldb:
      - name: ksqldb
        url:  https://ksqldb.confluent.svc.cluster.local:8088
        tls:
          enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: kafka-rest
  namespace: confluent
spec:
  kafkaClusterRef:
    name: kafka
  kafkaRest:
    endpoint: https://kafka.confluent.svc.cluster.local:8090
    authentication:
      type: mtls
    tls: 
      secretRef: tls-kafka